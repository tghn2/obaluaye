"""Remove search vectors

Revision ID: b0847f8dacd3
Revises: f86cb44cc77e
Create Date: 2023-10-25 09:29:44.438798

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "b0847f8dacd3"
down_revision = "f86cb44cc77e"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_group_description_vector", table_name="group", postgresql_using="gin")
    op.drop_index("ix_group_title_vector", table_name="group", postgresql_using="gin")
    op.drop_column("group", "description_vector")
    op.drop_column("group", "title_vector")
    op.drop_index("ix_pathway_description_vector", table_name="pathwaydescription", postgresql_using="gin")
    op.drop_column("pathwaydescription", "description_vector")
    op.drop_index("ix_pathway_title_vector", table_name="pathwaytitle", postgresql_using="gin")
    op.drop_column("pathwaytitle", "title_vector")
    op.drop_index("ix_resource_description_vector", table_name="resourcedescription", postgresql_using="gin")
    op.drop_column("resourcedescription", "description_vector")
    op.drop_index("ix_resource_title_vector", table_name="resourcetitle", postgresql_using="gin")
    op.drop_column("resourcetitle", "title_vector")
    op.drop_index("ix_subject_term_vector", table_name="subject", postgresql_using="gin")
    op.drop_column("subject", "term_vector")
    op.drop_index("ix_theme_description_vector", table_name="themedescription", postgresql_using="gin")
    op.drop_column("themedescription", "description_vector")
    op.drop_index("ix_theme_title_vector", table_name="themetitle", postgresql_using="gin")
    op.drop_column("themetitle", "title_vector")
    op.drop_index("ix_user_description_vector", table_name="user", postgresql_using="gin")
    op.drop_column("user", "description_vector")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "user",
        sa.Column(
            "description_vector",
            postgresql.TSVECTOR(),
            sa.Computed("to_tsvector('simple'::regconfig, 'description'::text)", persisted=True),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.create_index("ix_user_description_vector", "user", ["description_vector"], unique=False, postgresql_using="gin")
    op.add_column(
        "themetitle",
        sa.Column(
            "title_vector",
            postgresql.TSVECTOR(),
            sa.Computed("to_tsvector('simple'::regconfig, 'title'::text)", persisted=True),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.create_index("ix_theme_title_vector", "themetitle", ["title_vector"], unique=False, postgresql_using="gin")
    op.add_column(
        "themedescription",
        sa.Column(
            "description_vector",
            postgresql.TSVECTOR(),
            sa.Computed("to_tsvector('simple'::regconfig, 'description'::text)", persisted=True),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.create_index(
        "ix_theme_description_vector", "themedescription", ["description_vector"], unique=False, postgresql_using="gin"
    )
    op.add_column(
        "subject",
        sa.Column(
            "term_vector",
            postgresql.TSVECTOR(),
            sa.Computed("to_tsvector('simple'::regconfig, 'term'::text)", persisted=True),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.create_index("ix_subject_term_vector", "subject", ["term_vector"], unique=False, postgresql_using="gin")
    op.add_column(
        "resourcetitle",
        sa.Column(
            "title_vector",
            postgresql.TSVECTOR(),
            sa.Computed("to_tsvector('simple'::regconfig, 'title'::text)", persisted=True),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.create_index("ix_resource_title_vector", "resourcetitle", ["title_vector"], unique=False, postgresql_using="gin")
    op.add_column(
        "resourcedescription",
        sa.Column(
            "description_vector",
            postgresql.TSVECTOR(),
            sa.Computed("to_tsvector('simple'::regconfig, 'description'::text)", persisted=True),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.create_index(
        "ix_resource_description_vector",
        "resourcedescription",
        ["description_vector"],
        unique=False,
        postgresql_using="gin",
    )
    op.add_column(
        "pathwaytitle",
        sa.Column(
            "title_vector",
            postgresql.TSVECTOR(),
            sa.Computed("to_tsvector('simple'::regconfig, 'title'::text)", persisted=True),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.create_index("ix_pathway_title_vector", "pathwaytitle", ["title_vector"], unique=False, postgresql_using="gin")
    op.add_column(
        "pathwaydescription",
        sa.Column(
            "description_vector",
            postgresql.TSVECTOR(),
            sa.Computed("to_tsvector('simple'::regconfig, 'description'::text)", persisted=True),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.create_index(
        "ix_pathway_description_vector",
        "pathwaydescription",
        ["description_vector"],
        unique=False,
        postgresql_using="gin",
    )
    op.add_column(
        "group",
        sa.Column(
            "title_vector",
            postgresql.TSVECTOR(),
            sa.Computed("to_tsvector('simple'::regconfig, 'title'::text)", persisted=True),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "group",
        sa.Column(
            "description_vector",
            postgresql.TSVECTOR(),
            sa.Computed("to_tsvector('simple'::regconfig, 'description'::text)", persisted=True),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.create_index("ix_group_title_vector", "group", ["title_vector"], unique=False, postgresql_using="gin")
    op.create_index(
        "ix_group_description_vector", "group", ["description_vector"], unique=False, postgresql_using="gin"
    )
    # ### end Alembic commands ###
